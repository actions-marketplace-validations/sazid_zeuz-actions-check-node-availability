{"version":3,"file":"index.js","sources":["../webpack://zeuz-actions-check-node-availability/external \"assert\"","../webpack://zeuz-actions-check-node-availability/external \"buffer\"","../webpack://zeuz-actions-check-node-availability/external \"crypto\"","../webpack://zeuz-actions-check-node-availability/external \"events\"","../webpack://zeuz-actions-check-node-availability/external \"fs\"","../webpack://zeuz-actions-check-node-availability/external \"http\"","../webpack://zeuz-actions-check-node-availability/external \"https\"","../webpack://zeuz-actions-check-node-availability/external \"net\"","../webpack://zeuz-actions-check-node-availability/external \"node:buffer\"","../webpack://zeuz-actions-check-node-availability/external \"node:fs\"","../webpack://zeuz-actions-check-node-availability/external \"node:http\"","../webpack://zeuz-actions-check-node-availability/external \"node:https\"","../webpack://zeuz-actions-check-node-availability/external \"node:net\"","../webpack://zeuz-actions-check-node-availability/external \"node:path\"","../webpack://zeuz-actions-check-node-availability/external \"node:process\"","../webpack://zeuz-actions-check-node-availability/external \"node:stream\"","../webpack://zeuz-actions-check-node-availability/external \"node:stream/web\"","../webpack://zeuz-actions-check-node-availability/external \"node:url\"","../webpack://zeuz-actions-check-node-availability/external \"node:util\"","../webpack://zeuz-actions-check-node-availability/external \"node:zlib\"","../webpack://zeuz-actions-check-node-availability/external \"os\"","../webpack://zeuz-actions-check-node-availability/external \"path\"","../webpack://zeuz-actions-check-node-availability/external \"tls\"","../webpack://zeuz-actions-check-node-availability/external \"util\"","../webpack://zeuz-actions-check-node-availability/external \"worker_threads\"","../webpack://zeuz-actions-check-node-availability/webpack/bootstrap","../webpack://zeuz-actions-check-node-availability/webpack/runtime/create fake namespace object","../webpack://zeuz-actions-check-node-availability/webpack/runtime/define property getters","../webpack://zeuz-actions-check-node-availability/webpack/runtime/ensure chunk","../webpack://zeuz-actions-check-node-availability/webpack/runtime/get javascript chunk filename","../webpack://zeuz-actions-check-node-availability/webpack/runtime/hasOwnProperty shorthand","../webpack://zeuz-actions-check-node-availability/webpack/runtime/make namespace object","../webpack://zeuz-actions-check-node-availability/webpack/runtime/compat","../webpack://zeuz-actions-check-node-availability/webpack/runtime/import chunk loading","../webpack://zeuz-actions-check-node-availability/./index.js"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"assert\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"buffer\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"crypto\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"events\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"fs\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"http\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"https\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"net\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:buffer\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:fs\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:http\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:https\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:net\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:path\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:process\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:stream\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:stream/web\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:url\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:util\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:zlib\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"os\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"path\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"tls\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"util\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"worker_threads\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".index.js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = new URL('.', import.meta.url).pathname.slice(import.meta.url.match(/^file:\\/\\/\\/\\w:/) ? 1 : 0, -1) + \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\nvar installChunk = (data) => {\n\tvar {ids, modules, runtime} = data;\n\t// add \"modules\" to the modules object,\n\t// then flag all \"ids\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in modules) {\n\t\tif(__webpack_require__.o(modules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = modules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tfor(;i < ids.length; i++) {\n\t\tchunkId = ids[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[ids[i]] = 0;\n\t}\n\n}\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// import() chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[1]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = import(\"./\" + __webpack_require__.u(chunkId)).then(installChunk, (e) => {\n\t\t\t\t\t\tif(installedChunks[chunkId] !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t});\n\t\t\t\t\tvar promise = Promise.race([promise, new Promise((resolve) => (installedChunkData = installedChunks[chunkId] = [resolve]))])\n\t\t\t\t\tpromises.push(installedChunkData[1] = promise);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no external install chunk\n\n// no on chunks loaded","const core = import('@actions/core');\nconst fetch = import('node-fetch');\nconst wait = import('./wait');\n\n\n/*\n// most @actions toolkit packages have async methods\nasync function run() {\n  try {\n    const ms = core.getInput('milliseconds');\n    core.info(`Waiting ${ms} milliseconds ...`);\n\n    core.debug((new Date()).toTimeString()); // debug is only output if you set the secret `ACTIONS_RUNNER_DEBUG` to true\n    await wait(parseInt(ms));\n    core.info((new Date()).toTimeString());\n\n    core.setOutput('time', new Date().toTimeString());\n  } catch (error) {\n    core.setFailed(error.message);\n  }\n}\n*/\n\nasync function getMachines(server, apiKey, teamID, projectID) {\n  // remove trailing slash if present\n  if (server.slice(-1) == '/') {\n    server = server.slice(0, -1);\n  }\n  const url = `${server}/api/machines/list?` + new URLSearchParams({\n    team: teamID,\n    projectID: projectID,\n  });\n\n  return fetch(url, {\n    method: 'GET',\n    cache: 'no-cache',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-API-KEY': apiKey,\n    },\n  });\n}\n\nfunction checkMachineRegex(target, list) {\n  for (let i = 0; i < list.length; i++) {\n      if (target.test(list[i])) {\n          return list[i];\n      }\n  }\n  return null;\n}\n\nasync function run() {\n  try {\n    // https://qa.isara.com/api/machines/list?project=%7B%7Bproject%7D%7D&team=%7B%7Bteam%7D%7D&user_level=Automation\n    // required inputs\n    const server = core.getInput('zeuz_server_host');\n    const apiKey = core.getInput('zeuz_api_key');\n    const teamID = parseInt(core.getInput('zeuz_team_id'));\n    const projectID = core.getInput('zeuz_project_id');\n    const nodeID = core.getInput('node_id');\n    const nodeIDRegex = new RegExp(nodeID);\n\n    // optional inputs\n    // retry interval cannot be less than 1\n    const retryInterval = Math.max(1, parseInt(core.getInput('retry_interval')));\n    // retry timeout >= retry interval\n    const retryTimeout = Math.max(retryInterval, parseInt(core.getInput('retry_timeout')));\n\n    core.info(`Server: ${server}`);\n    core.info(`Team ID: ${teamID}`);\n    core.info(`Project: ${projectID}`);\n    core.info(`Node ID Regex pattern: ${nodeID}`);\n    core.info(`Retry timeout: ${retryTimeout}`);\n    core.info(`Retry interval: ${retryInterval}`);\n\n    let response = null;\n    for (let i = 0; i < retryTimeout; i += retryInterval) {\n      try {\n        response = await getMachines(server, apiKey, teamID, projectID);\n        const machines = response.json();\n        core.info(machines);\n\n        let pickedNodeID = checkMachineRegex(nodeIDRegex, machines);\n        if (pickedNodeID != null) {\n          core.info(\"Picked machine: \" + pickedNodeID);\n          core.setOutput(\"node_id\", pickedNodeID);\n          return;\n        } else {\n          core.info(`Iteration #${i}: Could not find machine. Retrying...`);\n          await wait(retryInterval * 1000);\n        }\n      } catch (error) {\n        core.info(`error fetching machines list, error: ${error}`);\n        core.info(error.stack);\n      }\n    }\n\n    core.setFailed(`Failed to find any available nodes with the given node id pattern: ${nodeID}`);\n  } catch (error) {\n    core.info(error.stack)\n    core.setFailed(error.message);\n  }\n}\n\nrun();\n"],"mappings":";;;;;;;AAAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;;ACAA;;A;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACRA;AACA;AACA;AACA;AACA;;;;;ACJA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACNA;AACA;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtsourceRoot":""}